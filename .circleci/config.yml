version: 2.1


workflows:
 version: 2.1
 build-test-deploy:
   jobs:
     - checkout_code
     - build:
         requires:
           - checkout_code
     - test:
         requires:
           - build
     - deploy:
         requires:
           - test
         filters:
           branches:
             only:
               - master


jobs:
 checkout_code:
   parallelism: 1
   executor:
     name: build_test
   working_directory: ~/workspace
   steps:
     - checkout
     - persist_to_workspace:
         root: ~/workspace
         paths:
           - ./*

 build:
   executor:
     name: build_test
   steps:
     - attach_workspace:
         at: ~/workspace
     - run:
         name: Configure PHP env
         command: cp .env.example .env
     - chmod_777
     - composer_install
     - persist_to_workspace:
         root: ~/workspace
         paths:
           - ./*

 test:
   executor:
     name: build_test
   working_directory: ~/workspace
   steps:
     - attach_workspace:
         at: ~/workspace
     - run:
         name: phpcs
         command: |
           vendor/bin/phpcs --standard=PSR1 -e app
         when: always

 deploy:
   executor:
     name: gce_deploy
   steps:
     - attach_workspace:
         at: ~/workspace
     - gettext_install
     - setup_remote_docker
     - authorize_gcp
     - build_docker_image
     - push_image_to_gcr
     - select_gke_cluster
     - deploy_kubernetes

commands:
 chmod_777:
   steps:
     - run:
         name: chmod 777 (directory permission adjustment)
         command: |
           chmod 777 -R storage
           chmod 777 -R bootstrap/cache

 composer_install:
   steps:
     - restore_cache:
         name: restore composer cache
         keys:
           - composer-cache-v1-{{ .Branch }}-{{ checksum "composer.lock" }}
     - run:
         name: composer install
         command: composer install -n --prefer-dist
     - save_cache:
         name: save composer cache
         key: composer-cache-v1-{{ .Branch }}-{{ checksum "composer.lock" }}
         paths:
           - ./vendor
     - run:
         name: clear laravel config
         command: php artisan config:clear
     - run:
         name: Generate key
         command: php artisan key:generate

 gettext_install:
   steps:
     - run:
         name: gettext install
         command: apt-get install -qq -y gettext

 authorize_gcp:
   steps:
     - run:
         name: Google Authentication
         command: |
           echo $JSON_KEY_FILE > ${HOME}/gcloud-service-key.json
           gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
           gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://asia.gcr.io
 build_docker_image:
   steps:
     - run:
         name: Docker build image
         command: |
           docker build \
             --file=dockerfile/Dockerfile \
             -t laravel-circleci .

 push_image_to_gcr:
   steps:
     - run:
         name: Docker push image to GCR
         command: |
           docker tag laravel-circleci asia.gcr.io/laravel-circleci/laravel-circleci:${CIRCLE_SHA1}-${CIRCLE_BUILD_NUM}
           docker push asia.gcr.io/laravel-circleci/laravel-circleci:${CIRCLE_SHA1}-${CIRCLE_BUILD_NUM}
           docker tag laravel-circleci asia.gcr.io/laravel-circleci/laravel-circleci:latest
           docker push asia.gcr.io/laravel-circleci/laravel-circleci:latest

 select_gke_cluster:
   steps:
     - run:
         name: Select GKE Cluster
         command: |
           gcloud config set core/project laravel-circleci
           gcloud config set container/cluster phongthuybinhan-cluster-1
           gcloud container clusters get-credentials phongthuybinhan-cluster-1 --zone asia-northeast3-a --project laravel-circleci

 deploy_kubernetes:
   steps:
     - run:
         name: Deploy to Kubernetes
         command: |
           envsubst < yaml_files/deployment.yaml > ./deployment.yaml
           envsubst < yaml_files/pdb-laravel-circleci.yaml > ./svc.yaml
           envsubst < yaml_files/svc-laravel-circleci.yaml > ./pdb.yaml
           kubectl apply -f ./deployment.yaml
           kubectl apply -f ./svc.yaml
           kubectl apply -f ./pdb.yaml
           kubectl rollout status deployment laravel-circleci


executors:
 build_test:
   docker:
     - image: circleci/php:7.4.3-zts
   working_directory: ~/workspace

 gce_deploy:
   docker:
     - image: google/cloud-sdk
   working_directory: ~/workspace




